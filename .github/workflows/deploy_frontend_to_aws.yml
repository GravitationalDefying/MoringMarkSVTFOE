name: Deploy frontend to AWS

on:
  push:
    branches: 
      - 'master'
      - 'aws'
    paths:
      - 'front/**'
      - '.github/workflows/deploy_frontend_to_aws.yml'



permissions:
  contents: read


jobs:
  build-front:
    name: Build and Upload front to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/front:$IMAGE_TAG ./front
        docker push $ECR_REGISTRY/front:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/front:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy-front:
    if: github.ref_name == 'master'
    name: Run frontend generation task on AWS
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://moringmark.grzegorzkoperwas.site
    needs:
      - 'build-front'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: run aws task
        run: aws ecs run-task 
            --cluster ${{ vars.CLUSTER_ARN }} 
            --task-definition ${{ vars.FRONT_TASK_ARN }} 
            --network-configuration "awsvpcConfiguration={subnets=[${{ vars.SUBNET_ID }}],securityGroups=[],assignPublicIp=ENABLED}" 
            --launch-type FARGATE
